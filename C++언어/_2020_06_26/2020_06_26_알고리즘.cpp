/* 
	2층 다락에 세 개의 전구가 설치되어 있다. 각각의 전구를 조절하는 스위치는
	1층 마루의 벽에 붙어 있다. 스위치를 올리면 전구는 켜지고, 스위치를 내리면
	전구는 꺼진다. 스위치는 처음에 모두 내려져 있는 상태이며 전구는 모두 새것으로 정상적으로 동작한다.
	이 집에 새로 이사를 온 전구의 달인 김병만 씨는 1층 마루에 있는 스위치 중에서
	어느 것이 어떤 전구를 조절하는지 아직 알지 못한다. 김병만 씨가 2층 다락에 올라가는 것이
	정확히 한 번만 허락된다고 했을 때, 그는 세 개의 스위치가 각각 어떤 전구를 조절하는지 알아낼 수 있을까?
*/

// 1번 전구를 한참 켜두고 끄면 열기가 남아있음
// 2번 전구를 키고 올라감
// 3번 전구는 꺼져있음
#include <iostream>

void main()
{
	int i, j, k = 0;	// 전구 1, 2, 3
	if (i = 1)
	{
		if (j = 1)
		{
			i = 0;
			k = 0;
		}
	}
}

/*
	1/1000 의 확률
	확인 수단은 n : 10명
	한 번 마신사람은 더 이상 먹을 수 없음
	500병 -> 1명		// 여기서 죽으면 이 500병안에있음. 안죽으면 다른 500병에 있음. n = 1
	250병 -> 1명		// 여기서 죽으면 이 250병안에있음. 안죽으면 다른 250병에 있음. n = 2
	125병 -> 1명		// 여기서 죽으면 이 125병안에있음. 안죽으면 다른 125병에 있음. n = 3
	63병 -> 1명		// 여기서 죽으면 이 63병안에있음. 안죽으면 다른 62병에 있음. n = 4
	32병 -> 1명		// 여기서 죽으면 이 32병안에있음. 안죽으면 다른 31병에 있음. n = 5
	16병 -> 1명		// 여기서 죽으면 이 16병안에있음. 안죽으면 다른 16병에 있음. n = 6
	8병 -> 1명		// 여기서 죽으면 이 8병안에있음. 안죽으면 다른 8병에 있음. n = 7
	4병 -> 1명		// 여기서 죽으면 이 4병안에있음. 안죽으면 다른 4병에 있음. n = 8
	2병 -> 1명		// 여기서 죽으면 이 2병안에있음. 안죽으면 다른 2병에 있음. n = 9
	1병 -> 1명		// 여기서 죽으면 이 1병안에있음. 안죽으면 다른 1병에 있음. n = 10
*/
